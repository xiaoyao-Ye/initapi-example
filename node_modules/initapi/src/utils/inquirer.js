"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useInquirer = void 0;
const inquirer_1 = __importDefault(require("inquirer"));
/**
 * 命令行交互获取生成文件类型, json资源地址
 * @returns
 */
function useInquirer(swagger, outputType) {
    return __awaiter(this, void 0, void 0, function* () {
        const serviceNameList = Object.keys(swagger);
        const rule = [];
        if (typeof outputType != 'undefined') {
            rule.push({
                name: 'fileType',
                message: '请选择生成的api类型:',
                type: 'list',
                default: 'TypeScript',
                choices: ['TypeScript', 'JavaScript'],
            });
        }
        rule.push({
            name: 'serviceName',
            message: '请选择swagger或openApi的预设json文件地址(custom选项可自定义地址):',
            type: 'list',
            default: serviceNameList[0],
            choices: [...serviceNameList, 'custom'],
        });
        let url;
        const { fileType, serviceName } = yield inquirer_1.default.prompt(rule);
        if (serviceName === 'custom') {
            const customAddressRule = [
                {
                    name: 'customAddress',
                    message: '请输入需要生成的json文件对应地址:',
                    validate: (url) => url.length > 0,
                },
            ];
            const { customAddress } = yield inquirer_1.default.prompt(customAddressRule);
            url = customAddress;
        }
        else {
            url = swagger[serviceName];
        }
        return { fileType: outputType !== null && outputType !== void 0 ? outputType : fileType, serviceName, url };
    });
}
exports.useInquirer = useInquirer;
