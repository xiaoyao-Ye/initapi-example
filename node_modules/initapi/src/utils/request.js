"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getInitData = void 0;
const swagger2openapi_1 = __importDefault(require("swagger2openapi"));
const index_1 = require("./index");
const axios_1 = __importDefault(require("axios"));
function getInitData(url) {
    return __awaiter(this, void 0, void 0, function* () {
        let data;
        if (!(0, index_1.isHttp)(url)) {
            data = (0, index_1.readJson)(url);
        }
        else {
            try {
                const res = yield axios_1.default.get(url);
                data = res.data;
            }
            catch (error) {
                throw new Error(error);
            }
        }
        if (!(data === null || data === void 0 ? void 0 : data.openapi))
            data = yield transformOpenApi(data);
        return data;
    });
}
exports.getInitData = getInitData;
const transformOpenApi = (data) => __awaiter(void 0, void 0, void 0, function* () {
    const { openapi } = yield swagger2openapi_1.default.convertObj(data, {});
    return openapi;
});
